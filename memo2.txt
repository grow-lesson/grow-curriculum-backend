Devise Token Auth（DTA）と通常のDeviseの主な違い

**1. ルーティングの設定:**
- 通常のDevise: `devise_for` メソッドを使用して通常のWebアプリケーション向けのルーティングを設定します。例えば、`/users/sign_in` や `/users/sign_up` などのパスが使われます。
- DTA: `mount_devise_token_auth_for` メソッドを使用してAPI向けのルーティングを設定します。例えば、`/auth/sign_in` や `/auth/sign_up` などのパスが使われます。DTAはAPI認証のために最適化されています。

**2. 認証トークンの使用:**
- 通常のDevise: 通常、WebアプリケーションではセッションとCookieを使用してユーザーの認証を管理します。
- DTA: API向けの認証には認証トークンが使用されます。ユーザーがログインすると、トークンが発行され、そのトークンを使用してリクエストごとに認証が行われます。

**3. ユーザー情報の追加:**
- 通常のDevise: ユーザーテーブルに新しいカラム（例: 名前、住所）を追加する際にマイグレーションを使用します。
- DTA: 通常、ユーザーテーブルへの新しいカラムの追加は必要ありません。必要な情報はトークン内にエンコードされて保存されます。

**4. メール送信:**
- 通常のDevise: ユーザー登録確認やパスワードリセットの際には、メールを送信してユーザーにリンクを提供します。
- DTA: メールの送信はオプションであり、必ずしも必要ではありません。トークンによる認証のため、メールを使わない設定も可能です。

DTAはAPIを利用する場合に特に便利であり、セッションやCookieを使用せずに認証を行うためのライブラリです。通常のDeviseはWebアプリケーションに適していますが、API向けの開発にはDTAが適しています。どちらのライブラリを選択するかは、アプリケーションの要件に合わせて判断すると良いでしょう。